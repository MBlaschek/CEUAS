#from numba import *
import numpy
import matplotlib.pyplot as plt
from scipy import stats
#import utils
import math
import os, sys, inspect
import astral
import datetime
import random
from putils import *
from janomaly import *

# pythran export xyanomaliesmbbcore(float[][][][],float[][][][],float[][][][],int,int[],float[],float[],int,int,int,int,int,float[],int[])
def xyanomaliesmbbcore(field,fieldplus,fieldminus,syear,interval,anomaly,climatology,n,ind,Xpos,Xres,est,hilf,season):

    miss_val=-1.e30


    for i in range(field.shape[2]):
#       print i
        for j in range(field.shape[3]):
            for k in range(field.shape[0]/12):
                for m in range(season.shape[0]):
                    hilf[k*12+season[m]]=field[k*12+season[m],0,i,j]
            l=-1
            janomaly(hilf,syear,interval,anomaly,climatology)
#            mbbfast(anomaly,Xres,n,l,ind,Xpos,est)
#           est,Xpos=utils.mbb(anomaly,n,func=nnanmean,ind=ind,Xpos=Xpos)
#           sest=sorted(est)
            bubblesort(est)
            fieldminus[0,0,i,j]+=est[int(numpy.floor(0.05*n))]
            fieldplus[0,0,i,j]+=est[int(numpy.floor(0.95*n))]

    return

#def dailyanomalydriver(d,ens,plotproperties):
    #h=d["ddata"]
    #sh=h.shape
    #anomaly=numpy.zeros(sh[4])
    #climatology=numpy.zeros(365)
    #for ist in range(sh[0]):
        #for ipar in range(sh[2]):
            #for ip in range(sh[3]):
                #good=dailyanomaly(h[ist,ens,ipar,ip,:],numpy.int(d["startdate"]/10000),
                                  #numpy.array(plotproperties["plotinterval"]),anomaly,climatology)
                #h[ist,ens,ipar,ip,:]=anomaly

    #return h[:,ens,:,:,:]

